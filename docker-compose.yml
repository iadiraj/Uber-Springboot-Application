version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springboot_backend_cont
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=postgres_data
      - JWT_SECRET=37e8a38543320b5425bece599eef15dc5cebc11e6ac36fe1be1d5eada0b25b93bb087ea8ef913a404a8cfcb45ea056eb1021d875468b7746d5e5c1722d0ca36abcc974e98e6543a24f340deaa2c0eded201680b488453a26b52150c89e5bb8795d46e11fa4f81c45e2a3ae3ca93b57ce326087795492d81d7a2ef0ab6aa7b5a7
    networks:
      - two-tier
    depends_on:
      postgres:
        condition: service_healthy
      prometheus:
        condition: service_started

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_cont
    ports:
      - "9090:9090"
    networks:
      - two-tier
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9090"]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana_cont
    ports:
      - "3000:3000"
    networks:
      - two-tier
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3000"]

  postgres:
    image: postgis/postgis:17-3.5
    container_name: postgre_cont
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=postgres_data
    ports:
      - "5432:5432"
    networks:
      - two-tier
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  two-tier:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
